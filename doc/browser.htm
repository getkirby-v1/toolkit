<!DOCTYPE html>
<!-- saved from url=(0032)http://getkirby.com/docs/browser -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">

<title>Kirby</title>


<meta name="description" content="Kirby is a super simple, designy PHP toolkit">
<meta name="keywords" content="php, toolkit, jquery, simple, design">
<meta name="author" content="Bastian Allgeier">
<meta http-equiv="imagetoolbar" content="no">

<link rel="shortcut icon" href="http://getkirby.com/favicon.ico">

<link rel="stylesheet" href="./browser_files/styles.css" media="all" type="text/css">

<link rel="stylesheet" type="text/css" media="screen" href="./browser_files/Flame.twilight.css"><script src="./browser_files/Fuel.php.js" type="text/javascript"></script></head>

<body>

<div id="page">

  <div id="menu">
  
    <ul>
            <li><a href="http://getkirby.com/home">kirby</a></li>
            <li><a class="active" href="http://getkirby.com/docs">docs</a></li>
            <li><a href="http://getkirby.com/download">download</a></li>
            <li><a href="http://getkirby.com/plugins">plugins</a></li>
          </ul>
  
  </div>
  
  <div id="content" class="docs">
  <h1>Documentation</h1>


<ul id="docsmenu">
    <li><a href="http://getkirby.com/docs/array">array</a></li>
      <li><a class="active" href="./browser_files/browser.htm">browser</a></li>
      <li><a href="http://getkirby.com/docs/config">config</a></li>
      <li><a href="http://getkirby.com/docs/content">content</a></li>
      <li><a href="http://getkirby.com/docs/cookie">cookie</a></li>
      <li><a href="http://getkirby.com/docs/core">core</a></li>
      <li><a href="http://getkirby.com/docs/database">database</a></li>
      <li><a href="http://getkirby.com/docs/dir">dir</a></li>
      <li><a href="http://getkirby.com/docs/file">file</a></li>
      <li><a href="http://getkirby.com/docs/globals">globals</a></li>
      <li><a href="http://getkirby.com/docs/helper">helper</a></li>
      <li><a href="http://getkirby.com/docs/language">language</a></li>
      <li><a href="http://getkirby.com/docs/request">request</a></li>
      <li><a href="http://getkirby.com/docs/server">server</a></li>
      <li><a href="http://getkirby.com/docs/session">session</a></li>
      <li><a href="http://getkirby.com/docs/size">size</a></li>
      <li><a href="http://getkirby.com/docs/string">string</a></li>
      <li><a href="http://getkirby.com/docs/url">url</a></li>
      <li><a href="http://getkirby.com/docs/validation">validation</a></li>
      <li><a href="http://getkirby.com/docs/xml">xml</a></li>
  </ul>

<div id="documentation">
<h2>Browser</h2>

<p>The browser class has some useful functions to detect the browser of the current user.</p>

<h3>Function: browser::name</h3>

<p>Returns the name of the current browser</p>

<h4>Syntax</h4>

<pre><code style="display: none; ">browser::name([user_agent]);
</code><pre class="twilightLighter"><span class="kw4">browser</span>::<span class="me1">name</span><span class="br0">(</span><span class="br0">[</span><span class="kw4">user_agent</span><span class="br0">]</span><span class="br0">)</span>;</pre></pre>

<h4>Arguments</h4>

<ol>
<li>user_agent - (string) you can modify the user agent string here. default is the current ua string</li>
</ol>

<h4>Returns</h4>

<ul>
<li>(string) returns the name of the browser</li>
</ul>

<h4>Names</h4>

<ul>
<li>ie (Internet Explorer)</li>
<li>fx (Firefox)</li>
<li>gecko</li>
<li>opera</li>
<li>chrome</li>
<li>safari</li>
<li>iron</li>
<li>konquerer</li>
<li>mozilla</li>
</ul>

<h4>Example</h4>

<pre><code style="display: none; ">browser::name();
// sample output: safari
</code><pre class="twilightLighter"><span class="kw4">browser</span>::<span class="me1">name</span><span class="br0">(</span><span class="br0">)</span>;<span class="co1">
// sample output: safari</span></pre></pre>

<hr>

<h3>Function: browser::engine</h3>

<p>Returns the name of the current browser engine</p>

<h4>Syntax</h4>

<pre><code style="display: none; ">browser::engine([user_agent]);
</code><pre class="twilightLighter"><span class="kw4">browser</span>::<span class="me1">engine</span><span class="br0">(</span><span class="br0">[</span><span class="kw4">user_agent</span><span class="br0">]</span><span class="br0">)</span>;</pre></pre>

<h4>Arguments</h4>

<ol>
<li>user_agent - (string) you can modify the user agent string here. default is the current ua string</li>
</ol>

<h4>Returns</h4>

<ul>
<li>(string) returns the name of the browser engine</li>
</ul>

<h4>Names</h4>

<ul>
<li>trident</li>
<li>gecko</li>
<li>presto</li>
<li>webkit</li>
</ul>

<h4>Example</h4>

<pre><code style="display: none; ">browser::engine();
// sample output: webkit
</code><pre class="twilightLighter"><span class="kw4">browser</span>::<span class="me1">engine</span><span class="br0">(</span><span class="br0">)</span>;<span class="co1">
// sample output: webkit</span></pre></pre>

<hr>

<h3>Function: browser::version</h3>

<p>Returns the version of the current browser</p>

<h4>Syntax</h4>

<pre><code style="display: none; ">browser::version([user_agent]);
</code><pre class="twilightLighter"><span class="kw4">browser</span>::<span class="me1">version</span><span class="br0">(</span><span class="br0">[</span><span class="kw4">user_agent</span><span class="br0">]</span><span class="br0">)</span>;</pre></pre>

<h4>Arguments</h4>

<ol>
<li>user_agent - (string) you can modify the user agent string here. default is the current ua string</li>
</ol>

<h4>Returns</h4>

<ul>
<li>(string) returns the version of the browser</li>
</ul>

<h4>Example</h4>

<pre><code style="display: none; ">browser::version();
// sample output: 4
</code><pre class="twilightLighter"><span class="kw4">browser</span>::<span class="me1">version</span><span class="br0">(</span><span class="br0">)</span>;<span class="co1">
// sample output: 4</span></pre></pre>

<hr>

<h3>Function: browser::platform</h3>

<p>Returns the os</p>

<h4>Syntax</h4>

<pre><code style="display: none; ">browser::platform([user_agent]);
</code><pre class="twilightLighter"><span class="kw4">browser</span>::<span class="me1">platform</span><span class="br0">(</span><span class="br0">[</span><span class="kw4">user_agent</span><span class="br0">]</span><span class="br0">)</span>;</pre></pre>

<h4>Arguments</h4>

<ol>
<li>user_agent - (string) you can modify the user agent string here. default is the current ua string</li>
</ol>

<h4>Returns</h4>

<ul>
<li>(string) returns the os</li>
</ul>

<h4>Platforms</h4>

<ul>
<li>mac</li>
<li>win</li>
<li>linux</li>
<li>mobile</li>
<li>iphone</li>
<li>ipod</li>
<li>webtv</li>
<li>freebsd</li>
</ul>

<h4>Example</h4>

<pre><code style="display: none; ">browser::platform();
// sample output: mac
</code><pre class="twilightLighter"><span class="kw4">browser</span>::<span class="me1">platform</span><span class="br0">(</span><span class="br0">)</span>;<span class="co1">
// sample output: mac</span></pre></pre>

<hr>

<h3>Function: browser::mobile</h3>

<p>Checks whether the user browses with a mobile browser</p>

<h4>Syntax</h4>

<pre><code style="display: none; ">browser::mobile([user_agent]);
</code><pre class="twilightLighter"><span class="kw4">browser</span>::<span class="me1">mobile</span><span class="br0">(</span><span class="br0">[</span><span class="kw4">user_agent</span><span class="br0">]</span><span class="br0">)</span>;</pre></pre>

<h4>Arguments</h4>

<ol>
<li>user_agent - (string) you can modify the user agent string here. default is the current ua string</li>
</ol>

<h4>Returns</h4>

<ul>
<li>(boolean)</li>
</ul>

<h4>Example</h4>

<pre><code style="display: none; ">if(browser::mobile()) echo 'You are browsing with a mobile phone';
</code><pre class="twilightLighter"><span class="me1">if</span><span class="br0">(</span><span class="kw4">browser</span>::<span class="me1">mobile</span><span class="br0">(</span><span class="br0">)</span><span class="br0">)</span> <span class="kw1">echo</span> <span class="st0">'You are browsing with a mobile phone'</span>;</pre></pre>

<hr>

<h3>Function: browser::iphone</h3>

<p>Checks whether the user browses with a iphone/ipod</p>

<h4>Syntax</h4>

<pre><code style="display: none; ">browser::iphone([user_agent]);
</code><pre class="twilightLighter"><span class="kw4">browser</span>::<span class="me1">iphone</span><span class="br0">(</span><span class="br0">[</span><span class="kw4">user_agent</span><span class="br0">]</span><span class="br0">)</span>;</pre></pre>

<h4>Arguments</h4>

<ol>
<li>user_agent - (string) you can modify the user agent string here. default is the current ua string</li>
</ol>

<h4>Returns</h4>

<ul>
<li>(boolean)</li>
</ul>

<h4>Example</h4>

<pre><code style="display: none; ">if(browser::iphone()) echo 'You are browsing with an iphone';
</code><pre class="twilightLighter"><span class="me1">if</span><span class="br0">(</span><span class="kw4">browser</span>::<span class="me1">iphone</span><span class="br0">(</span><span class="br0">)</span><span class="br0">)</span> <span class="kw1">echo</span> <span class="st0">'You are browsing with an iphone'</span>;</pre></pre>

<hr>

<h3>Function: browser::css</h3>

<p>Returns a css selector string, which can be used for browser specific css.</p>

<h4>Syntax</h4>

<pre><code style="display: none; ">browser::css([user_agent]);
</code><pre class="twilightLighter"><span class="kw4">browser</span>::<span class="me1">css</span><span class="br0">(</span><span class="br0">[</span><span class="kw4">user_agent</span><span class="br0">]</span><span class="br0">)</span>;</pre></pre>

<h4>Arguments</h4>

<ol>
<li>user_agent - (string) you can modify the user agent string here. default is the current ua string</li>
</ol>

<h4>Returns</h4>

<ul>
<li>(string) css browser selector</li>
</ul>

<h4>Example</h4>

<pre><code style="display: none; ">&lt;body class="&lt;?php echo browser::css() ?&gt;"&gt;
// sampel output: &lt;body class="webkit safari safari4 mac"&gt;
</code><pre class="twilightLighter">&lt;<span class="kw4">body</span> <span class="kw1">class</span>=<span class="st0">"&lt;?php echo browser::css() ?&gt;"</span>&gt;<span class="co1">
// sampel output: &lt;body class="webkit safari safari4 mac"&gt;</span></pre></pre>

<hr>

<h3>Function: browser::detect</h3>

<p>Detect the current browser and return all details</p>

<h4>Syntax</h4>

<pre><code style="display: none; ">browser::detect([user_agent]);
</code><pre class="twilightLighter"><span class="kw4">browser</span>::<span class="me1">detect</span><span class="br0">(</span><span class="br0">[</span><span class="kw4">user_agent</span><span class="br0">]</span><span class="br0">)</span>;</pre></pre>

<h4>Arguments</h4>

<ol>
<li>user_agent - (string) you can modify the user agent string here. default is the current ua string</li>
</ol>

<h4>Returns</h4>

<ul>
<li>(array) all details as array</li>
</ul>

<h4>Example</h4>

<pre><code style="display: none; ">$detect = browser::detect();
// sampel output: array(
//    'browser' =&gt; 'safari',
//    'engine'  =&gt; 'webkit',
//    'version' =&gt; 4,
//    'platform' =&gt; 'mac'
// );
</code><pre class="twilightLighter"><span class="kw3">$detect</span> = <span class="kw4">browser</span>::<span class="me1">detect</span><span class="br0">(</span><span class="br0">)</span>;<span class="co1">
// sampel output: array(</span><span class="co1">
//    'browser' =&gt; 'safari',</span><span class="co1">
//    'engine'  =&gt; 'webkit',</span><span class="co1">
//    'version' =&gt; 4,</span><span class="co1">
//    'platform' =&gt; 'mac'</span><span class="co1">
// );</span></pre></pre>

<hr>
</div>  </div>

  <div id="footer">
    © 2010 –&nbsp;<a href="http://bastian-allgeier.de/">Bastian Allgeier</a>
    <ul>
      <li><a href="http://twitter.com/getkirby">Follow Kirby on Twitter</a></li>
    </ul>
  </div>

</div>

<script type="text/javascript" src="./browser_files/mootools.js"></script>
<script type="text/javascript" src="./browser_files/Lighter.js"></script>
<script type="text/javascript" src="./browser_files/Fuel.js"></script>
<script type="text/javascript" src="./browser_files/scripts.js"></script>

<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script><script src="./browser_files/ga.js" type="text/javascript"></script>
<script type="text/javascript">
try {
var pageTracker = _gat._getTracker("UA-431401-11");
pageTracker._trackPageview();
} catch(err) {}</script>




</body></html>