<!DOCTYPE html>
<!-- saved from url=(0020)http://getkirby.com/ -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">

<title>Kirby</title>


<meta name="description" content="Kirby is a super simple, designy PHP toolkit">
<meta name="keywords" content="php, toolkit, jquery, simple, design">
<meta name="author" content="Bastian Allgeier">
<meta http-equiv="imagetoolbar" content="no">

<link rel="shortcut icon" href="http://getkirby.com/favicon.ico">

<link rel="stylesheet" href="./Kirby_files/styles.css" media="all" type="text/css">

<link rel="stylesheet" type="text/css" media="screen" href="./Kirby_files/Flame.twilight.css"><script src="./Kirby_files/Fuel.php.js" type="text/javascript"></script></head>

<body>

<div id="page">

  <div id="menu">
  
    <ul>
            <li><a class="active" href="http://getkirby.com/home">kirby</a></li>
            <li><a href="http://getkirby.com/docs">docs</a></li>
            <li><a href="http://getkirby.com/download">download</a></li>
            <li><a href="http://getkirby.com/plugins">plugins</a></li>
          </ul>
  
  </div>
  
  <div id="content" class="home">
  <p>
Welcome to Kirby –&nbsp;a stripped down and easy to use toolkit for PHP. 
It's by no means a full featured mvc/wtf framework, it's more like jQuery or Mootools for PHP. Kirby is there
to make nerdy things a little less nerdy.
</p>

<p>
Kirby is in alpha and completely free to use. 
Please read the <a href="http://getkirby.com/docs">docs</a> to learn more about it, follow Kirby on <a href="http://twitter.com/getkirby">Twitter</a> and <a href="http://getkirby.com/download">download</a> the latest version to get started.
</p>

<h2>Features</h2>
<div id="features">
  <ul class="left">
    <li>Database Handling (MySQL)</li>
    <li>Loads of string and array helpers</li>
    <li>File and directory handling</li>
    <li>Session and Cookie helpers</li>
    <li>Browser detection</li>
  </ul>
  <ul class="right">
    <li>Easy language support</li>
    <li>Easy request handling</li>
    <li>Validation</li>
    <li>Easy app configuration</li>
  </ul>
</div>


<p>
Here are two tiny examples to give you a better idea what Kirby does
</p>

<h2>Easy database handling</h2>
<pre><code style="display: none; ">&lt;?php

require_once('kirby.php');

// setup the database
c::set('db.host', 'localhost');
c::set('db.user', 'root');
c::set('db.password', 'password');
c::set('db.name', 'database');

// select all users from an imaginary user table
$users = db::select('users', '*');

// build a list of encoded email addresses
// with a fallback for users without an email address
foreach($users AS $user) {
    echo str::email( a::get($user, 'email', 'no email') );
}

?&gt;</code><pre class="twilightLighter"><span class="de1">&lt;?php</span>

<span class="me1">require_once</span><span class="br0">(</span><span class="st0">'kirby.php'</span><span class="br0">)</span>;
<span class="co1">
// setup the database</span>
<span class="kw4">c</span>::<span class="me1">set</span><span class="br0">(</span><span class="st0">'db.host'</span>, <span class="st0">'localhost'</span><span class="br0">)</span>;
<span class="kw4">c</span>::<span class="me1">set</span><span class="br0">(</span><span class="st0">'db.user'</span>, <span class="st0">'root'</span><span class="br0">)</span>;
<span class="kw4">c</span>::<span class="me1">set</span><span class="br0">(</span><span class="st0">'db.password'</span>, <span class="st0">'password'</span><span class="br0">)</span>;
<span class="kw4">c</span>::<span class="me1">set</span><span class="br0">(</span><span class="st0">'db.name'</span>, <span class="st0">'database'</span><span class="br0">)</span>;
<span class="co1">
// select all users from an imaginary user table</span>
<span class="kw3">$users</span> = <span class="kw4">db</span>::<span class="me1">select</span><span class="br0">(</span><span class="st0">'users'</span>, <span class="st0">'*'</span><span class="br0">)</span>;
<span class="co1">
// build a list of encoded email addresses</span><span class="co1">
// with a fallback for users without an email address</span>
<span class="me1">foreach</span><span class="br0">(</span><span class="kw3">$users</span> <span class="kw4">AS</span> <span class="kw3">$user</span><span class="br0">)</span> <span class="br0">{</span>
    <span class="kw1">echo</span> <span class="kw4">str</span>::<span class="me1">email</span><span class="br0">(</span> <span class="kw4">a</span>::<span class="me1">get</span><span class="br0">(</span><span class="kw3">$user</span>, <span class="st0">'email'</span>, <span class="st0">'no email'</span><span class="br0">)</span> <span class="br0">)</span>;
<span class="br0">}</span>

<span class="de2">?&gt;</span></pre></pre>

<h2>Handling requests and validation</h2>
<pre><code style="display: none; ">&lt;?php

require_once('kirby.php');

if(get('submit')) {
    
    $email = get('email');

    if(!v::email($email)) {
        echo 'That is not a valid email address';
    } else {
        db::insert('newsletter', array('email' =&gt; $email));
        go('/success');
    }
    
}

?&gt;
&lt;form&gt;
  &lt;input type="text" name="email" /&gt;
  &lt;input type="submit" name="submit" value="Subscribe" /&gt;
&lt;/form&gt;</code><pre class="twilightLighter"><span class="de1">&lt;?php</span>

<span class="me1">require_once</span><span class="br0">(</span><span class="st0">'kirby.php'</span><span class="br0">)</span>;

<span class="me1">if</span><span class="br0">(</span><span class="me1">get</span><span class="br0">(</span><span class="st0">'submit'</span><span class="br0">)</span><span class="br0">)</span> <span class="br0">{</span>
    
    <span class="kw3">$email</span> = <span class="me1">get</span><span class="br0">(</span><span class="st0">'email'</span><span class="br0">)</span>;

    <span class="me1">if</span><span class="br0">(</span>!<span class="kw4">v</span>::<span class="me1">email</span><span class="br0">(</span><span class="kw3">$email</span><span class="br0">)</span><span class="br0">)</span> <span class="br0">{</span>
        <span class="kw1">echo</span> <span class="st0">'That is not a valid email address'</span>;
    <span class="br0">}</span> <span class="kw1">else</span> <span class="br0">{</span>
        <span class="kw4">db</span>::<span class="me1">insert</span><span class="br0">(</span><span class="st0">'newsletter'</span>, <span class="me1">array</span><span class="br0">(</span><span class="st0">'email'</span> =&gt; <span class="kw3">$email</span><span class="br0">)</span><span class="br0">)</span>;
        <span class="me1">go</span><span class="br0">(</span><span class="st0">'/success'</span><span class="br0">)</span>;
    <span class="br0">}</span>
    
<span class="br0">}</span>

<span class="de2">?&gt;</span>
&lt;<span class="kw4">form</span>&gt;
  &lt;<span class="kw4">input</span> <span class="kw4">type</span>=<span class="st0">"text"</span> <span class="kw4">name</span>=<span class="st0">"email"</span> /&gt;
  &lt;<span class="kw4">input</span> <span class="kw4">type</span>=<span class="st0">"submit"</span> <span class="kw4">name</span>=<span class="st0">"submit"</span> <span class="kw4">value</span>=<span class="st0">"Subscribe"</span> /&gt;
&lt;/<span class="kw4">form</span>&gt;</pre></pre>

<h2>What others say</h2>
<p>"Kirby is a really nice and handy collection of tools to use on a daily basis."<br>
<em>- <a href="http://labuschin.com/">Martin Labuschin</a>, Web developer at Trusted Shops</em>
</p>


<h2>Requirements</h2>
<p>Kirby likes PHP 5, Apache on unix systems and MySQL. Everything else is not supported.</p>

<h2>Feedback</h2>
<p>Please let me know if you like Kirby or you hate Kirby or whatever: <a title="mail@bastian-allgeier.de" class="email" href="mailto:mail@bastian-allgeier.de">mail@bastian-allgeier.de</a></p>
  </div>

  <div id="footer">
    © 2010 –&nbsp;<a href="http://bastian-allgeier.de/">Bastian Allgeier</a>
    <ul>
      <li><a href="http://twitter.com/getkirby">Follow Kirby on Twitter</a></li>
    </ul>
  </div>

</div>

<script type="text/javascript" src="./Kirby_files/mootools.js"></script>
<script type="text/javascript" src="./Kirby_files/Lighter.js"></script>
<script type="text/javascript" src="./Kirby_files/Fuel.js"></script>
<script type="text/javascript" src="./Kirby_files/scripts.js"></script>

<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script><script src="./Kirby_files/ga.js" type="text/javascript"></script>
<script type="text/javascript">
try {
var pageTracker = _gat._getTracker("UA-431401-11");
pageTracker._trackPageview();
} catch(err) {}</script>




</body></html>